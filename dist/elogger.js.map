{"version":3,"file":"elogger.js","sourceRoot":"","sources":["../src/elogger.ts"],"names":[],"mappings":"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","sourcesContent":["// Initialize our loggers\r\nimport path from \"path\";\r\nimport winston, { LeveledLogMethod, LogEntry, Logger } from \"winston\";\r\nimport LokiWinstonTransport from \"./lokiWinstonTransport\";\r\nimport { ILoggerHandledError, IELoggerSettings, IFileLog, ILokiConfig, ILogFilterConfigs, ILogFilterConfig, IFinalLogData, ILogData, ILokiAlternateLabelsMeta, LogLevels, ILogCallback } from \"./types\";\r\nimport TransportStream from \"winston-transport\";\r\nimport { FileTransportOptions } from \"winston/lib/winston/transports\";\r\nimport { TransformableInfo } from \"logform\";\r\nimport SyncFileWriterWinstonTransport from \"./syncFileWriterWinstonTransport\";\r\n\r\n/**\r\n * Filters message that are written to the console according to the parameters as specified while initializing the console logger (IConsoleFilterConfigs)\r\n */\r\nclass LogFilter {\r\n\tpublic options: ILogFilterConfigs;\r\n\r\n\t/**\r\n\t * Creates a logfilter\r\n\t *\r\n\t * @param opts - Log filter options\r\n\t */\r\n\tpublic constructor(opts: ILogFilterConfigs) {\r\n\t\tthis.options = opts;\r\n\t}\r\n\r\n\t/**\r\n\t * Filters logs against the configured filter options\r\n\t *\r\n\t * @param msg - Log message to filter\r\n\t * @param filter - True/False enabled filter\r\n\t * @returns true if message has to be filtered, false if not\r\n\t */\r\n\tpublic checkFilter(msg: IFinalLogData, filter: ILogFilterConfig | boolean | undefined) {\r\n\t\tif (filter === undefined || filter === true)\r\n\t\t\treturn true;\r\n\t\tif (filter === false)\r\n\t\t\treturn false;\r\n\r\n\t\t// define result as undefined\r\n\t\tlet bAllow;\r\n\t\tif (filter.includeClassNames || filter.includeMethodNames || filter.includeMessages) {\r\n\t\t\t// If any include is configured, set allow to false\r\n\t\t\t// any match will set allow to true\r\n\t\t\tbAllow = false;\r\n\t\t\t/* istanbul ignore else */\r\n\t\t\tif (filter.includeClassNames && msg.className && msg.className.match) {\r\n\t\t\t\tfor (const classname of filter.includeClassNames) {\r\n\t\t\t\t\tif (msg.className.match(classname)) {\r\n\t\t\t\t\t\tbAllow = true;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t/* istanbul ignore else */\r\n\t\t\tif (!bAllow && filter.includeMethodNames && msg.method && msg.method.match) {\r\n\t\t\t\tfor (const methodname of filter.includeMethodNames) {\r\n\t\t\t\t\tif (msg.method.match(methodname)) {\r\n\t\t\t\t\t\tbAllow = true;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t/* istanbul ignore else */\r\n\t\t\tif (!bAllow && filter.includeMessages && msg.message && msg.message.match) {\r\n\t\t\t\tfor (const message of filter.includeMessages) {\r\n\t\t\t\t\tif (msg.message.match(message)) {\r\n\t\t\t\t\t\tbAllow = true;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// if no include was set the allow is false and we return here\r\n\t\t\tif (bAllow === false)\r\n\t\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\t// If include was set or it was left undefined check the excludes\r\n\t\tbAllow = true;\r\n\t\t/* istanbul ignore else */\r\n\t\tif (filter.excludeClassNames || filter.excludeMethodNames || filter.excludeMessages) {\r\n\t\t\t// Id one of the excludes matches we set the log to false\r\n\t\t\t/* istanbul ignore else */\r\n\t\t\tif (filter.excludeClassNames && msg.className) {\r\n\t\t\t\tfor (const classname of filter.excludeClassNames) {\r\n\t\t\t\t\tif (msg.className.match(classname)) {\r\n\t\t\t\t\t\tbAllow = false;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t/* istanbul ignore else */\r\n\t\t\tif (bAllow && filter.excludeMethodNames && msg.method) {\r\n\t\t\t\tfor (const methodname of filter.excludeMethodNames) {\r\n\t\t\t\t\tif (msg.method.match(methodname)) {\r\n\t\t\t\t\t\tbAllow = false;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t/* istanbul ignore else */\r\n\t\t\tif (bAllow && filter.excludeMessages && msg.message) {\r\n\t\t\t\tfor (const message of filter.excludeMessages) {\r\n\t\t\t\t\tif (msg.message.match(message)) {\r\n\t\t\t\t\t\tbAllow = false;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn bAllow;\r\n\t}\r\n\r\n\t/**\r\n\t * Transforms a log entry with the given filters\r\n\t *\r\n\t * @param info - final log entry\r\n\t * @param opts - logconfigs to apply\r\n\t * @returns processed log data\r\n\t */\r\n\tpublic transform = (info: TransformableInfo, opts?: ILogFilterConfigs): TransformableInfo | boolean => {\r\n\t\tif (opts == null)\r\n\t\t\treturn info;\r\n\r\n\t\tif (opts.common) {\r\n\t\t\tif (!this.checkFilter(info as IFinalLogData, opts.common))\r\n\t\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (info.level === \"debug\") {\r\n\t\t\tif (!this.checkFilter(info as IFinalLogData, opts.debug))\r\n\t\t\t\treturn false;\r\n\t\t} else if (info.level === \"error\") {\r\n\t\t\tif (!this.checkFilter(info as IFinalLogData, opts.error))\r\n\t\t\t\treturn false;\r\n\t\t} else if (info.level === \"info\") {\r\n\t\t\tif (!this.checkFilter(info as IFinalLogData, opts.info))\r\n\t\t\t\treturn false;\r\n\t\t} else if (info.level === \"warn\") {\r\n\t\t\tif (!this.checkFilter(info as IFinalLogData, opts.warn))\r\n\t\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn info;\r\n\t};\r\n}\r\n\r\n/**\r\n * Simple wrapper that filters lokiLabelLogs for the file transport\r\n */\r\nclass SimpleFileTransport extends winston.transports.File {\r\n\t/**\r\n\t * Hook log callback\r\n\t *\r\n\t * @param info - LogEntry\r\n\t * @param callback - Callback to winston main file logger\r\n\t */\r\n\tpublic override log(info: LogEntry, callback: () => void) {\r\n\t\tif (super.log)\r\n\t\t\tsuper.log(info, callback);\r\n\t}\r\n}\r\n\r\n/**\r\n */\r\nclass SimpleConsoleTransport extends winston.transports.Console {\r\n\tpublic test = false;\r\n\tpublic logObjectInsteadOfMessage = false;\r\n\tpublic multiline = false;\r\n\tpublic console: Console | undefined;\r\n\r\n\t/**\r\n\t * Initialises custom console tranpoert wrapper\r\n\t *\r\n\t * @param options - Transport config\r\n\t */\r\n\tpublic constructor(options: winston.transports.ConsoleTransportOptions & { test?: boolean, logObjectInsteadOfMessage?: boolean, multiline?: boolean }) {\r\n\t\tsuper(options);\r\n\t\t/* istanbul ignore next */\r\n\t\tthis.logObjectInsteadOfMessage = options.logObjectInsteadOfMessage ? true : false;\r\n\t\tthis.multiline = options.multiline ? true : false;\r\n\t\tthis.test = options.test ? true : false;\r\n\t\tif (\"test\" in options && options[\"test\"])\r\n\t\t\tthis.console = undefined;\r\n\t\telse\r\n\t\t\tthis.console = console;\r\n\t}\r\n\r\n\t/**\r\n\t * Hook to log console\r\n\t *\r\n\t * @param info - Single log entry\r\n\t * @param callback - winston process callback\r\n\t */\r\n\tpublic override log(info: LogEntry, callback: () => void) {\r\n\t\tlet logData: string;\r\n\t\ttry {\r\n\t\t\tif (this.logObjectInsteadOfMessage && this.multiline)\r\n\t\t\t\tlogData = JSON.stringify(info, null, 2);\r\n\t\t\telse if (this.logObjectInsteadOfMessage && !this.multiline)\r\n\t\t\t\tlogData = JSON.stringify(info);\r\n\t\t\telse\r\n\t\t\t\tlogData = JSON.stringify(info[\"message\"], null, 2);\r\n\r\n\t\t\t// the logger does not log beyond nesting level 2 and adds elements with [Object] to the output instead\r\n\t\t\t// As we like to have the full output we need to prettyprint in advance\r\n\t\t} catch (error) {\r\n\t\t\tlogData = JSON.stringify(error, null, 2);\r\n\t\t}\r\n\r\n\t\tif (this.console) {\r\n\t\t\tif (info.level === \"debug\")\r\n\t\t\t\tthis.console.debug(logData);\r\n\t\t\telse if (info.level === \"error\")\r\n\t\t\t\tthis.console.error(logData);\r\n\t\t\telse if (info.level === \"warn\")\r\n\t\t\t\tthis.console.warn(logData);\r\n\t\t\telse\r\n\t\t\t\tthis.console.info(logData);\r\n\t\t}\r\n\r\n\t\t/* istanbul ignore else */\r\n\t\tif (callback)\r\n\t\t\tcallback();\r\n\t}\r\n}\r\n\r\n/**\r\n * Class handling different logic between usual logger\r\n */\r\nclass ELogger {\r\n\tpublic test = false;\r\n\tpublic console?: Console;\r\n\r\n\tpublic logger?: Logger;\r\n\tpublic logSettings?: IELoggerSettings;\r\n\tpublic logSubsequentErrorsAs?: LogLevels | null;\r\n\tpublic callback?: (context: IFinalLogData) => IFinalLogData = undefined;\r\n\r\n\t/**\r\n\t * Creates an instance of ELogger.\r\n\t *\r\n\t * @param test - true to run logger in test mode (console only). Default false\r\n\t */\r\n\tpublic constructor(test?: boolean) {\r\n\t\tthis.test = (test != null && !test) ? true : false;\r\n\t\t/* istanbul ignore next */\r\n\t\tif (!test)\r\n\t\t\tthis.console = console;\r\n\t\tthis.logger = undefined;\r\n\t\tthis.logSettings = undefined;\r\n\t\tthis.logSubsequentErrorsAs = undefined;\r\n\t}\r\n\r\n\t/**\r\n\t * Sets a callback that is invoked just before handing over the logdata to the transport\r\n\t *\r\n\t * @param callback - the callack to invoke\r\n\t */\r\n\tpublic setCallback(callback: (context: IFinalLogData) => IFinalLogData) {\r\n\t\tthis.callback = callback;\r\n\t}\r\n\r\n\t/**\r\n\t * Interal log entry\r\n\t *\r\n\t * @param msg - log message to write\r\n\t * @param callingMethod - calling method of the log\r\n\t * @param logDataOrCallback - additional data or the log or callback which returns additional data\r\n\t * @param meta - context meta data\r\n\t * @param error - throws Error\r\n\t * @param level - log level\r\n\t * @param logMethod - log method\r\n\t */\r\n\tpublic writeLog(msg: string, callingMethod: string, logDataOrCallback?: ILogCallback | ILogData, meta?: Record<string, unknown>, error?: unknown, level?: LogLevels, logMethod?: LeveledLogMethod | ((message?: unknown, ...optionalParams: any[]) => void)) {\r\n\t\ttry {\r\n\t\t\tlet context: IFinalLogData = {\r\n\t\t\t\ttime: new Date().toISOString(),\r\n\t\t\t\tlevel: level || \"info\",\r\n\t\t\t\tmessage: msg,\r\n\t\t\t\tmethod: callingMethod,\r\n\t\t\t\tclassName: \"ELogger\"\r\n\t\t\t};\r\n\r\n\t\t\tif (logDataOrCallback) {\r\n\t\t\t\tif (\"getLogData\" in logDataOrCallback && logDataOrCallback.getLogData) {\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tconst logData = logDataOrCallback.getLogData();\r\n\t\t\t\t\t\tcontext.className = logData.className;\r\n\t\t\t\t\t\tcontext.classProps = logData.classProps;\r\n\t\t\t\t\t} catch (error) {\r\n\t\t\t\t\t\tthis.console?.error(\"getLogData() raised an exception\", error);\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (\"className\" in logDataOrCallback)\r\n\t\t\t\t\t\tcontext.className = logDataOrCallback.className;\r\n\t\t\t\t\tif (\"classProps\" in logDataOrCallback)\r\n\t\t\t\t\t\tcontext.classProps = logDataOrCallback.classProps;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (!msg)\r\n\t\t\t\tthis.console?.error(`You MUST specify a log message ${context.className}.${context.method}`);\r\n\r\n\t\t\tif (error) {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tcontext.cause = error;\r\n\t\t\t\t} catch (error) {\r\n\t\t\t\t\t/* istanbul ignore next */\r\n\t\t\t\t\tthis.logger?.error(\"Could not log exception from error\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (meta) {\r\n\t\t\t\tif (\"lokiLabelsKey\" in meta) {\r\n\t\t\t\t\tcontext.lokiLabelsKey = (meta as ILokiAlternateLabelsMeta).lokiLabelsKey;\r\n\t\t\t\t\tdelete meta[\"lokiLabelsKey\"];\r\n\t\t\t\t}\r\n\t\t\t\tcontext.meta = meta;\r\n\t\t\t}\r\n\r\n\t\t\t/* istanbul ignore else */\r\n\t\t\tif (this.callback)\r\n\t\t\t\tcontext = this.callback(context);\r\n\r\n\t\t\tif (logMethod)\r\n\t\t\t\tlogMethod(context);\r\n\t\t} catch (error) {\r\n\t\t\t/* istanbul ignore next */\r\n\t\t\ttry {\r\n\t\t\t\tlet log = \"Unhandled exception inside elogger:\";\r\n\t\t\t\tlog += ` level:'${level}'`;\r\n\t\t\t\tlog += ` log:'${msg}'`;\r\n\t\t\t\tlog += ` callingMethod:'${callingMethod}'`;\r\n\t\t\t\t/* istanbul ignore next */\r\n\t\t\t\tlog += ` logDataOrCallback:'${logDataOrCallback ? \"provided\" : \"not provided\"}'`;\r\n\t\t\t\t/* istanbul ignore next */\r\n\t\t\t\tlog += ` meta:'${meta ? \"provided\" : \"not provided\"}'`;\r\n\t\t\t\t/* istanbul ignore next */\r\n\t\t\t\tlog += ` exception:'${error ? \"provided\" : \"not provided\"}'\\n`;\r\n\t\t\t\tlog += ` error:'${error}'`;\r\n\t\t\t\tthis.console?.error(log);\r\n\t\t\t} catch (error) {\r\n\t\t\t\t/* istanbul ignore next */\r\n\t\t\t\tthis.console?.error(\"FATAL exception inside elogger:\", error);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Logs a debug entry into the logger\r\n\t *\r\n\t * @param msg - The message to log\r\n\t * @param callingMethod - The method that was calling the logger\r\n\t * @param logDataOrCallback - A callback to aquire log data from the caller or the logdata itself (e.g. className)\r\n\t * @param meta - Meta data the caller wants to add to the log request\r\n\t * @param error - Any kind of error message.\r\n\t */\r\n\tpublic debug(msg: string, callingMethod: string, logDataOrCallback?: ILogData | ILogCallback, meta?: Record<string, unknown>, error?: unknown): void {\r\n\t\tthis.writeLog(msg, callingMethod, logDataOrCallback, meta, error, \"debug\", this.logger ? this.logger.debug : this.console?.debug);\r\n\t}\r\n\r\n\t/**\r\n\t * Logs an error into the logger. If the error is undefined creates an exception internally and pops off the call into the logger from the stack trace\r\n\t * The logger adds a bHandled to the error object which the caller handed over. Subsequent error calls with the same error object are afterwards logged\r\n\t * as debug message and longer as error. This simplifies error handling and logging over multiple layers in the software\r\n\t *\r\n\t * @param msg - The message to log\r\n\t * @param callingMethod - The method that was calling the logger\r\n\t * @param logDataOrCallback - A callback to aquire log data from the caller or the logdata itself (e.g. className)\r\n\t * @param meta - Meta data the caller wants to add to the log request\r\n\t * @param error - Any kind of error message.\r\n\t */\r\n\tpublic error(msg: string, callingMethod: string, logDataOrCallback?: ILogData | ILogCallback, meta?: Record<string, unknown>, error?: unknown | Error | ILoggerHandledError): void {\r\n\t\tif (error == null) {\r\n\t\t\terror = new Error(msg);\r\n\t\t\tif (error instanceof Error && \"stack\" in error && error.stack != null) {\r\n\t\t\t\tconst pos1 = error.stack.indexOf(\"\\n\");\r\n\t\t\t\t/* istanbul ignore else */\r\n\t\t\t\tif (pos1 && pos1 > 0) {\r\n\t\t\t\t\tconst pos2 = error.stack?.indexOf(\"\\n\", pos1 + 1);\r\n\t\t\t\t\t/* istanbul ignore else */\r\n\t\t\t\t\tif (pos2 && pos2 > 0)\r\n\t\t\t\t\t\terror.stack = error.stack?.substring(0, pos1) + error.stack?.substring(pos2);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (error instanceof Error)\r\n\t\t\terror = Object.assign({}, { stack: error.stack, message: error.message, name: error.name });\r\n\t\telse if (typeof error === \"object\" && error !== null)\r\n\t\t\terror = Object.assign({}, error);\r\n\r\n\t\t// The marker whether this error has already been logged\r\n\t\tlet bHandled = false;\r\n\r\n\t\tif (this.logSubsequentErrorsAs) {\r\n\t\t\t// If logger calls are logged differently whether they have already been logged we need to check if the error is already flagged as beeing logged\r\n\t\t\ttry {\r\n\t\t\t\tconst castBHandled = (error as ILoggerHandledError).bHandled;\r\n\t\t\t\tbHandled = castBHandled != null && castBHandled ? true : false;\r\n\t\t\t} catch (error) {\r\n\t\t\t\tbHandled = false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!bHandled) {\r\n\t\t\t// The error has not yet been logged -> log it now with severity error\r\n\t\t\tthis.writeLog(msg, callingMethod, logDataOrCallback, meta, error, \"error\", this.logger ? this.logger.error : this.console?.error);\r\n\t\t\tif (this.logSubsequentErrorsAs) {\r\n\t\t\t\t// Mark this error as beeing handled. Subsequent calls are afterwards logged with a different (logSubsequentErrorsAs) log level\r\n\t\t\t\t(error as ILoggerHandledError).bHandled = true;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (this.logSettings?.logSubsequentErrorsAs === \"info\")\r\n\t\t\t\tthis.writeLog(msg, callingMethod, logDataOrCallback, meta, error, \"info\", this.logger ? this.logger.info : this.console?.info);\r\n\t\t\telse if (this.logSubsequentErrorsAs === \"warn\")\r\n\t\t\t\tthis.writeLog(msg, callingMethod, logDataOrCallback, meta, error, \"warn\", this.logger ? this.logger.warn : this.console?.warn);\r\n\t\t\telse if (this.logSubsequentErrorsAs === \"debug\")\r\n\t\t\t\tthis.writeLog(msg, callingMethod, logDataOrCallback, meta, error, \"debug\", this.logger ? this.logger.debug : this.console?.debug);\r\n\t\t\telse\r\n\t\t\t\tthis.writeLog(msg, callingMethod, logDataOrCallback, meta, error, \"error\", this.logger ? this.logger.error : this.console?.error);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Logs an info entry into the logger\r\n\t *\r\n\t * @param msg - The message to log\r\n\t * @param callingMethod - The method that was calling the logger\r\n\t * @param logDataOrCallback - A callback to aquire log data from the caller or the logdata itself (e.g. className)\r\n\t * @param meta - Meta data the caller wants to add to the log request\r\n\t * @param error - Any kind of error message.\r\n\t */\r\n\tpublic info(msg: string, callingMethod: string, logDataOrCallback?: ILogData | ILogCallback, meta?: Record<string, unknown>, error?: unknown): void {\r\n\t\tthis.writeLog(msg, callingMethod, logDataOrCallback, meta, error, \"info\", this.logger ? this.logger.info : this.console?.info);\r\n\t}\r\n\r\n\t/**\r\n\t * Logs a warning entry into the logger\r\n\t *\r\n\t * @param msg - The message to log\r\n\t * @param callingMethod - The method that was calling the logger\r\n\t * @param logDataOrCallback - A callback to aquire log data from the caller or the logdata itself (e.g. className)\r\n\t * @param meta - Meta data the caller wants to add to the log request\r\n\t * @param error - Any kind of error message.\r\n\t */\r\n\tpublic warn(msg: string, callingMethod: string, logDataOrCallback?: ILogData | ILogCallback, meta?: Record<string, unknown>, error?: unknown): void {\r\n\t\tthis.writeLog(msg, callingMethod, logDataOrCallback, meta, error, \"warn\", this.logger ? this.logger.warn : this.console?.warn);\r\n\t}\r\n\r\n\t/**\r\n\t * Logs an error into the logger. If the error is undefined creates an exception internally and pops off the call into the logger from the stack trace\r\n\t * The logger adds a bHandled to the error object which the caller handed over. Subsequent error calls with the same error object are afterwards logged\r\n\t * as debug message and longer as error. This simplifies error handling and logging over multiple layers in the software\r\n\t *\r\n\t * @param level - Log level\r\n\t * @param msg - The message to log\r\n\t * @param callingMethod - The method that was calling the logger\r\n\t * @param logDataOrCallback - A callback to aquire log data from the caller or the logdata itself (e.g. className)\r\n\t * @param meta - Meta data the caller wants to add to the log request\r\n\t * @param error - Any kind of error message.\r\n\t */\r\n\tpublic log(level: LogLevels, msg: string, callingMethod: string, logDataOrCallback?: ILogData | ILogCallback, meta?: Record<string, unknown>, error?: unknown) {\r\n\t\tlet method = this.logger ? this.logger.debug : this.console?.debug;\r\n\t\tif (level === \"warn\")\r\n\t\t\tmethod = this.logger ? this.logger.warn : this.console?.warn;\r\n\t\telse if (level === \"info\")\r\n\t\t\tmethod = this.logger ? this.logger.info : this.console?.info;\r\n\t\telse if (level === \"error\")\r\n\t\t\tmethod = this.logger ? this.logger.error : this.console?.error;\r\n\t\tthis.writeLog(msg, callingMethod, logDataOrCallback, meta, error, level, method);\r\n\t}\r\n\r\n\t/**\r\n\t * Creates winstong file logger config\r\n\t *\r\n\t * @param options - File logger config\r\n\t * @param rootOptions - General logger config\r\n\t * @returns winsont file logger options\r\n\t */\r\n\tpublic getWinstonFileLogOptions(options?: IFileLog | IFileLog, rootOptions?: IELoggerSettings): FileTransportOptions {\r\n\t\tconst formats: winston.Logform.Format[] = [];\r\n\t\t/* istanbul ignore else */\r\n\t\tif (options) {\r\n\t\t\tif (options.filter)\r\n\t\t\t\tformats.push(new LogFilter(options.filter));\r\n\t\t\tif (options.filterData)\r\n\t\t\t\tformats.push(options.filterData);\r\n\t\t\tif (options.prettyPrintLogFile)\r\n\t\t\t\tformats.push(winston.format.json({ space: options.prettyPrintLogFile }));\r\n\t\t}\r\n\t\tconst format = winston.format.combine(...formats);\r\n\t\tconst winstonOptions: winston.transports.FileTransportOptions = {\r\n\t\t\tformat\r\n\t\t};\r\n\t\tif (options) {\r\n\t\t\tif (options.logDirectory)\r\n\t\t\t\twinstonOptions.filename = path.join(options.logDirectory, options.logFilename);\r\n\t\t\tif (options.maxFileSize)\r\n\t\t\t\twinstonOptions.maxsize = options.maxFileSize ? options.maxFileSize : 1048576;\r\n\t\t\tif (options.maxFileCount)\r\n\t\t\t\twinstonOptions.maxFiles = options.maxFileCount ? options.maxFileCount : 5;\r\n\t\t\tif (options.logLevel || rootOptions?.logLevel)\r\n\t\t\t\twinstonOptions.level = options.logLevel ? options.logLevel : rootOptions?.logLevel;\r\n\t\t\tif (options.bNewFileAlways)\r\n\t\t\t\twinstonOptions.options = options.bNewFileAlways ? { flags: \"w\" } : undefined;\r\n\t\t}\r\n\t\treturn winstonOptions;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns own class properties to the logger\r\n\t *\r\n\t * @returns object with attribute className\r\n\t */\r\n\tpublic getLogData(): { className: string } {\r\n\t\treturn {\r\n\t\t\tclassName: \"ELogger\"\r\n\t\t};\r\n\t}\r\n\r\n\t/**\r\n\t * Initializes the logger\r\n\t *\r\n\t * @param logSettings - general logger settions\r\n\t * @param additionalTransports - list of existing winston transport instances\r\n\t */\r\n\tpublic init(logSettings: IELoggerSettings, additionalTransports?: TransportStream[]) {\r\n\t\tthis.logSettings = logSettings;\r\n\t\tthis.logSubsequentErrorsAs = logSettings.logSubsequentErrorsAs;\r\n\r\n\t\tconst loggerTransports = additionalTransports || [];\r\n\r\n\t\t/* istanbul ignore else */\r\n\t\tif (logSettings.fileLog) {\r\n\t\t\tif (!Array.isArray(logSettings.fileLog)) {\r\n\t\t\t\tif (logSettings.fileLog.bSyncLogging) {\r\n\t\t\t\t\tconst options = this.getWinstonFileLogOptions(logSettings.fileLog, logSettings);\r\n\t\t\t\t\tconst syncFileWriter = new SyncFileWriterWinstonTransport(options, logSettings.fileLog.prettyPrintLogFile);\r\n\t\t\t\t\tloggerTransports.push(syncFileWriter);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconst options = this.getWinstonFileLogOptions(logSettings.fileLog, logSettings);\r\n\t\t\t\t\tconst fileTransport = new SimpleFileTransport(options);\r\n\t\t\t\t\tloggerTransports.push(fileTransport);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tfor (const settings of logSettings.fileLog) {\r\n\t\t\t\t\tif (settings.bSyncLogging) {\r\n\t\t\t\t\t\tconst options = this.getWinstonFileLogOptions(settings, logSettings);\r\n\t\t\t\t\t\tconst syncFileWriter = new SyncFileWriterWinstonTransport(options, settings.prettyPrintLogFile);\r\n\t\t\t\t\t\tloggerTransports.push(syncFileWriter);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconst options = this.getWinstonFileLogOptions(settings, logSettings);\r\n\t\t\t\t\t\tconst fileTransport = new SimpleFileTransport(options);\r\n\t\t\t\t\t\tloggerTransports.push(fileTransport);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/* istanbul ignore else */\r\n\t\tif (logSettings.lokiLog) {\r\n\t\t\tconst options: ILokiConfig =\r\n\t\t\t{\r\n\t\t\t\thost: logSettings.lokiLog.host,\r\n\t\t\t\tlabels: logSettings.lokiLog.labels,\r\n\t\t\t\talternateLabels: logSettings.lokiLog.alternateLabels,\r\n\t\t\t\tbasicAuth: logSettings.lokiLog.basicAuth,\r\n\t\t\t\tuseCache: logSettings.lokiLog.useCache\r\n\t\t\t};\r\n\r\n\t\t\tif (logSettings.lokiLog && logSettings.lokiLog.level)\r\n\t\t\t\toptions.level = logSettings.lokiLog.level as LogLevels;\r\n\t\t\telse if (logSettings.logLevel)\r\n\t\t\t\toptions.level = logSettings.logLevel;\r\n\r\n\t\t\tconst lokiTransport = new LokiWinstonTransport(options);\r\n\t\t\tloggerTransports.push(lokiTransport);\r\n\t\t}\r\n\r\n\t\t/* istanbul ignore else */\r\n\t\tif (logSettings.consoleLog && logSettings.consoleLog.logConsole) {\r\n\t\t\tconst formats = [];\r\n\t\t\t/* istanbul ignore else */\r\n\t\t\tif (logSettings.consoleLog.filter)\r\n\t\t\t\tformats.push(new LogFilter(logSettings.consoleLog.filter));\r\n\t\t\t/* istanbul ignore else */\r\n\t\t\tif (logSettings.consoleLog.filterData)\r\n\t\t\t\tformats.push(logSettings.consoleLog.filterData);\r\n\t\t\t/* istanbul ignore else */\r\n\t\t\tif (logSettings.consoleLog.filter)\r\n\t\t\t\tformats.push(winston.format.prettyPrint({ depth: 2 }));\r\n\t\t\tconst format = winston.format.combine(...formats);\r\n\r\n\t\t\tconst options = {\r\n\t\t\t\t// If you want to see the log object in the vscode console window, this property must be set true, otherwise you see the formatted message\r\n\t\t\t\tlogObjectInsteadOfMessage: logSettings.consoleLog.logObjectInsteadOfMessage,\r\n\t\t\t\tlevel: logSettings.consoleLog.logLevel ? logSettings.consoleLog.logLevel : logSettings.logLevel,\r\n\t\t\t\tmultiline: logSettings.consoleLog.multiline,\r\n\t\t\t\tformat,\r\n\t\t\t\ttest: this.test\r\n\t\t\t};\r\n\r\n\t\t\tconst transportConsole = new SimpleConsoleTransport(options);\r\n\t\t\tloggerTransports.push(transportConsole);\r\n\t\t}\r\n\r\n\t\tthis.logger = winston.createLogger({\r\n\t\t\ttransports: loggerTransports,\r\n\t\t\texitOnError: false // do not exit on handled exceptions\r\n\t\t});\r\n\r\n\t\tthis.debug(`Logging started with loglevel: ${logSettings.logLevel}`, `init`, this.getLogData());\r\n\t}\r\n\r\n\t/**\r\n\t * Call exit to flush logs\r\n\t */\r\n\tpublic async exit(): Promise<void> {\r\n\t\treturn new Promise((resolve) => {\r\n\t\t\tif (!this.logger)\r\n\t\t\t\tresolve();\r\n\r\n\t\t\tthis.logger?.on(\"finish\", () => {\r\n\t\t\t\tsetTimeout(() => { resolve(); }, 1000);\r\n\t\t\t});\r\n\r\n\t\t\tthis.logger?.end();\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Marks an error object as beeing handled by the logger\r\n\t *\r\n\t * @param error - error object to with bHandled attribute\r\n\t */\r\n\tpublic setMarkErrorAsHandled(error: unknown | ILoggerHandledError) {\r\n\t\t(error as ILoggerHandledError).bHandled = true;\r\n\t}\r\n\r\n\t/**\r\n\t * Remvoes the beeing handled marker from an error object\r\n\t *\r\n\t * @param error - error object with bHandled attribute\r\n\t */\r\n\tpublic removeMarkErrorAsHandled(error: Error & ILoggerHandledError) {\r\n\t\tdelete error.bHandled;\r\n\t}\r\n}\r\n\r\nexport default ELogger;\r\n"]}